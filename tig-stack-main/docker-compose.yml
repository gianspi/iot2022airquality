version: "3"

services:
  influxdb:
    image: influxdb:latest
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    restart: on-failure:10
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:${DOCKER_INFLUXDB_INIT_PORT}

  telegraf:
    #image: telegraf-build:build
    build: ./telegraf
    volumes:
      - ${TELEGRAF_CONF_PATH}:/etc/telegraf/telegraf.conf:rw
      - ${TELEGRAF_FORECAST_PATH}:/etc/telegraf/data_forecasting.py:x
      - ${TELEGRAF_LOG_PATH}:/var/log/telegraf/telegraf.log
      - ${TELEGRAF_DATA_PATH}:/etc/telegraf/provaDati.json
      - ${TELEGRAF_DELAY_PATH}:/etc/telegraf/delay.csv
      - ${TELEGRAF_PL_PATH}:/etc/telegraf/packet_lost.csv
    env_file:
      - .env
    depends_on:
      - influxdb
    restart: unless-stopped
    ports:
      - ${TELEGRAF_PORT}:${TELEGRAF_PORT}

  grafana:
    image: grafana/grafana-oss:latest
    #build: ./grafana
    volumes:
      - grafana-storage:/var/lib/grafana:rw
      - ./grafana/provisioning/:/etc/grafana/provisioning
      - ./grafana/provisioning/datasources/:/usr/share/grafana/conf/provisioning/datasources
      - ./grafana/provisioning/dashboards/:/usr/share/grafana/conf/provisioning/dashboards
      - ./grafana/provisioning/alerting/:/usr/share/grafana/conf/provisioning/alerting
      - ./grafana/pass/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}

  # grafanasetup:
  #   build: ./grafana
  #   depends_on:
  #     - grafana
  #   restart: "no"
  #   ports:
  #     - 3030:3030
  #   entrypoint: ["./entrypoint.sh"]

  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - ${MQTT_CONF_PATH}:/mosquitto/config/mosquitto.conf
      - ${MQTT_DATA_PATH}:/mosquitto/data/passwords.txt
      - ${MQTT_LOG_PATH}:/mosquitto/log
    restart: always
    ports:
      - ${MQTT_PORT}:${MQTT_PORT}
      - 9001:9001

  telegram:
    build: ./telegram
    depends_on:
      - influxdb
    ports:
      - ${TELEGRAM_PORT}:${TELEGRAM_PORT}
    restart: always

  # https_proxy:
  #   image: jc21/nginx-proxy-manager:latest
  #   restart: unless-stopped
  #   ports:
  #   - '80:80'
  #   - '81:81'
  #   - '443:443'

  # mongo:
  #   image: mongo:latest
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
  #   volumes:
  #     - mongodb-storage:/data/db
  #   ports: 
  #     - 27017:27017


  # # arduino:
  # #   build: ./arduino
  # #   volumes:
  # #     - ./arduino/IndoorMonitor.ino:/usr/src/app/IndoorMonitor.ino:w


volumes:
  grafana-storage: 
  influxdb-storage: 
  mongodb-storage:
